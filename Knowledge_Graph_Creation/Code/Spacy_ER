{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Spacy_ER","version":"0.3.2","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"metadata":{"id":"zAn022367Rfs","colab_type":"code","colab":{}},"cell_type":"code","source":["# Reference: https://github.com/explosion/spaCy/blob/master/examples/information_extraction/entity_relations.py\n","from __future__ import unicode_literals, print_function\n","\n","import plac\n","import spacy"],"execution_count":0,"outputs":[]},{"metadata":{"id":"WSDsNi5bOJDe","colab_type":"code","colab":{}},"cell_type":"code","source":["def main(model=\"en_core_web_sm\"):\n","    nlp = spacy.load(model)\n","    print(\"Loaded model '%s'\" % model)\n","    print(\"Processing %d texts\" % len(TEXTS))\n","\n","    for text in TEXTS:\n","        doc = nlp(text)\n","        print(dir(doc))\n","        \n","        relations = extract_currency_relations(doc)\n","        for r1, r2 in relations:\n","            print(\"{:<10}\\t{}\\t{}\".format(r1.text, r2.ent_type_, r2.text))\n","\n","           "],"execution_count":0,"outputs":[]},{"metadata":{"id":"gHeDHHZQ8EEc","colab_type":"code","outputId":"ac1a298b-415d-4691-cf23-9de5f8924aca","executionInfo":{"status":"ok","timestamp":1556239553972,"user_tz":240,"elapsed":1300,"user":{"displayName":"Vidhyalakshimi Sreenivasan","photoUrl":"https://lh4.googleusercontent.com/-USDjX2HH3qk/AAAAAAAAAAI/AAAAAAAAAAc/AhuvJIOSFK0/s64/photo.jpg","userId":"08716189862880610765"}},"colab":{"base_uri":"https://localhost:8080/","height":176}},"cell_type":"code","source":["TEXTS = [\n","    \"Net income was $9.4 million compared to the prior year of $2.7 million.\",\n","    \"Revenue exceeded twelve billion dollars, with a loss of $1b.\",\n","]\n","\n","\n","@plac.annotations(model=(\"Model to load (needs parser and NER)\", \"positional\", None, str))\n","\n","            \n","def extract_currency_relations(doc):\n","    # merge entities and noun chunks into one token\n","    spans = list(doc.ents) + list(doc.noun_chunks)\n","    for span in spans:\n","        span.merge()\n","\n","    relations = []\n","    for money in filter(lambda w: w.ent_type_ == \"MONEY\", doc):\n","        if money.dep_ in (\"attr\", \"dobj\"):\n","            subject = [w for w in money.head.lefts if w.dep_ == \"nsubj\"]\n","            if subject:\n","                subject = subject[0]\n","                relations.append((subject, money))\n","        elif money.dep_ == \"pobj\" and money.head.dep_ == \"prep\":\n","            relations.append((money.head.head, money))\n","    return relations\n","\n","          \n","if __name__ == \"__main__\":\n","    main()\n","\n","    # Expected output:\n","    # Net income      MONEY   $9.4 million\n","    # the prior year  MONEY   $2.7 million\n","    # Revenue         MONEY   twelve billion dollars\n","    # a loss          MONEY   1b"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Loaded model 'en_core_web_sm'\n","Processing 2 texts\n","['_', '__bytes__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__ne__', '__new__', '__pyx_vtable__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__setstate__', '__sizeof__', '__str__', '__subclasshook__', '__unicode__', '_bulk_merge', '_py_tokens', '_realloc', '_vector', '_vector_norm', 'cats', 'char_span', 'count_by', 'doc', 'ents', 'extend_tensor', 'from_array', 'from_bytes', 'from_disk', 'get_extension', 'get_lca_matrix', 'has_extension', 'has_vector', 'is_parsed', 'is_sentenced', 'is_tagged', 'mem', 'merge', 'noun_chunks', 'noun_chunks_iterator', 'print_tree', 'remove_extension', 'retokenize', 'sentiment', 'sents', 'set_extension', 'similarity', 'tensor', 'text', 'text_with_ws', 'to_array', 'to_bytes', 'to_disk', 'user_data', 'user_hooks', 'user_span_hooks', 'user_token_hooks', 'vector', 'vector_norm', 'vocab']\n","Net income\tMONEY\t$9.4 million\n","the prior year\tMONEY\t$2.7 million\n","['_', '__bytes__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__ne__', '__new__', '__pyx_vtable__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__setstate__', '__sizeof__', '__str__', '__subclasshook__', '__unicode__', '_bulk_merge', '_py_tokens', '_realloc', '_vector', '_vector_norm', 'cats', 'char_span', 'count_by', 'doc', 'ents', 'extend_tensor', 'from_array', 'from_bytes', 'from_disk', 'get_extension', 'get_lca_matrix', 'has_extension', 'has_vector', 'is_parsed', 'is_sentenced', 'is_tagged', 'mem', 'merge', 'noun_chunks', 'noun_chunks_iterator', 'print_tree', 'remove_extension', 'retokenize', 'sentiment', 'sents', 'set_extension', 'similarity', 'tensor', 'text', 'text_with_ws', 'to_array', 'to_bytes', 'to_disk', 'user_data', 'user_hooks', 'user_span_hooks', 'user_token_hooks', 'vector', 'vector_norm', 'vocab']\n","Revenue   \tMONEY\ttwelve billion dollars\n","a loss    \tMONEY\t1b\n"],"name":"stdout"}]},{"metadata":{"id":"9zTa7nFhCjwE","colab_type":"code","colab":{}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]}]}